diff --git a/acinclude/os-deps.m4 b/acinclude/os-deps.m4
index e88ae7b9b..2a2f89f2f 100644
--- a/acinclude/os-deps.m4
+++ b/acinclude/os-deps.m4
@@ -163,104 +163,7 @@ AC_DEFINE_UNQUOTED(DEFAULT_FD_SETSIZE, $DEFAULT_FD_SETSIZE, [Default FD_SETSIZE
 dnl checks the maximum number of filedescriptor we can open
 dnl sets shell var squid_filedescriptors_num
 
-AC_DEFUN([SQUID_CHECK_MAXFD],[
-AC_CHECK_FUNCS(getrlimit setrlimit)
-AC_MSG_CHECKING(Maximum number of filedescriptors we can open)
-SQUID_STATE_SAVE(maxfd)
-dnl FreeBSD pthreads break dup2().
-  AS_CASE([$host_os],[freebsd],[ LDFLAGS=`echo $LDFLAGS | sed -e "s/-pthread//"` ])
-  AC_RUN_IFELSE([AC_LANG_SOURCE([[
-#include <stdio.h>
-#include <unistd.h>
-#include <stdlib.h>
-#include <sys/time.h>	/* needed on FreeBSD */
-#include <sys/param.h>
-#include <sys/resource.h>
-int main(int argc, char **argv) {
-	FILE *fp;
-	int i,j;
-#if defined(__CYGWIN32__) || defined (__CYGWIN__)
-    /* getrlimit and sysconf returns bogous values on cygwin32.
-     * Number of fds is virtually unlimited in cygwin (sys/param.h)
-     * __CYGWIN32__ is deprecated.
-     */
-    i = NOFILE;
-#else
-#if HAVE_GETRLIMIT && HAVE_SETRLIMIT
-    struct rlimit rl;
-#if defined(RLIMIT_NOFILE)
-    if (getrlimit(RLIMIT_NOFILE, &rl) < 0) {
-        perror("getrlimit: RLIMIT_NOFILE");
-    } else {
-#if defined(__APPLE__)
-        /* asking for more than OPEN_MAX fails on Leopard */
-        rl.rlim_cur = (OPEN_MAX < rl.rlim_max ? OPEN_MAX : rl.rlim_max);
-#else
-        rl.rlim_cur = rl.rlim_max;      /* set it to the max */
-#endif
-        if (setrlimit(RLIMIT_NOFILE, &rl) < 0) {
-            perror("setrlimit: RLIMIT_NOFILE");
-        }
-    }
-#elif defined(RLIMIT_OFILE)
-    if (getrlimit(RLIMIT_OFILE, &rl) < 0) {
-        perror("getrlimit: RLIMIT_OFILE");
-    } else {
-        rl.rlim_cur = rl.rlim_max;      /* set it to the max */
-        if (setrlimit(RLIMIT_OFILE, &rl) < 0) {
-            perror("setrlimit: RLIMIT_OFILE");
-        }
-    }
-#endif /* RLIMIT_NOFILE */
-#endif /* HAVE_SETRLIMIT */
-	/* by starting at 2^14, we will never get higher
-	than 2^15 for squid_filedescriptors_num */
-        i = j = 1<<14;
-        while (j) {
-                j >>= 1;
-                if (dup2(0, i) < 0) { 
-                        i -= j;
-                } else {
-                        close(i);
-                        i += j;
-                }
-        }
-        i++;
-#endif /* IF !DEF CYGWIN */
-	fp = fopen("conftestval", "w");
-	fprintf (fp, "%d\n", i & ~0x3F);
-	return 0;
-}
-  ]])],[squid_filedescriptors_limit=`cat conftestval`],[],[:])
-  dnl Microsoft MSVCRT.DLL supports 2048 maximum FDs
-  AS_CASE(["$host_os"],[mingw|mingw32],[squid_filedescriptors_limit="2048"])
-  AC_MSG_RESULT($squid_filedescriptors_limit)
-  AS_IF([ test "x$squid_filedescriptors_num" = "x" ],[
-    AS_IF([ test "x$squid_filedescriptors_limit" != "x" ],[
-      squid_filedescriptors_num=$squid_filedescriptors_limit
-    ],[
-      AC_MSG_NOTICE([Unable to detect filedescriptor limits. Assuming 256 is okay.])
-      squid_filedescriptors_num=256
-    ])
-  ])
-SQUID_STATE_ROLLBACK(maxfd)
-
-AC_MSG_NOTICE([Default number of filedescriptors: $squid_filedescriptors_num])
-
-AS_IF([ test `expr $squid_filedescriptors_num % 64` != 0 ],[
-  AC_MSG_WARN([$squid_filedescriptors_num is not an multiple of 64. This may cause issues on certain platforms.])
-])
-
-AS_IF([ test "$squid_filedescriptors_num" -lt 512 ],[
-  AC_MSG_WARN([$squid_filedescriptors_num may not be enough filedescriptors if your])
-  AC_MSG_WARN([cache will be very busy.  Please see the FAQ page])
-  AC_MSG_WARN([http://wiki.squid-cache.org/SquidFaq/TroubleShooting])
-  AC_MSG_WARN([on how to increase your filedescriptor limit])
-])
-AC_DEFINE_UNQUOTED(SQUID_MAXFD,$squid_filedescriptors_num,[Maximum number of open filedescriptors])
-])
-
-
+squid_filedescriptors_num=2048
 dnl Check whether this OS defines sin6_len as a member of sockaddr_in6 as a backup to ss_len
 dnl defines HAVE_SIN6_LEN_IN_SAI
 dnl TODO: move to AC_CHECK_MEMBER?
