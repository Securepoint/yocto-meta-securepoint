#HDR:APP syslog
# vim:set ft=config:
@version: 3.7
# Global options.
options {
  chain-hostnames(off);
  use-dns(no);
  use-fqdn(no);
  owner("root");
  group("adm"); perm(0640);
  stats-freq(0);
  bad-hostname("^gconfd$");
  ts-format(iso);
  frac_digits(3);
  time-reopen(10);
  flush-lines(100);
  flush-timeout(10000);
};

# Sources
source s_src {
  unix-dgram("/dev/log");
  internal();
  file("/proc/kmsg" program_override("kernel"));
};

# Destinations
destination d_audit_sql {
    sql(
        type(sqlite3)
        database("/data/syslog/messages.db")
        table("audit")
        columns("datetime", "program", "pid integer", "message")
        values("${ISODATE}", "${PROGRAM}", "${PID}", "${MSGONLY}")
        flags(dont-create-tables, explicit-commits)
        retries(3)
    );
};

destination d_messages_sql {
    sql(
        type(sqlite3)
        database("/data/syslog/messages.db")
        table("messages")
        columns("datetime", "program", "pid integer", "message")
        values("${ISODATE}", "${PROGRAM}", "${PID}", "${MSGONLY}")
        flags(dont-create-tables, explicit-commits)
        retries(3)
    );
};

destination d_firewall_sql {
    sql(
        type(sqlite3)
        database("/data/syslog/messages.db")
        table("firewall")
        columns("datetime", "program", "pid integer", "message")
        values("${ISODATE}", "${PROGRAM}", "${PID}", "${MSGONLY}")
        flags(dont-create-tables, explicit-commits)
        retries(3)
    );
};

# Filters
filter f_messages { not message("^(AUDIT|DROP:|REJECT:|ACCEPT:)"); };
filter f_firewall { message("^(DROP|REJECT|ACCEPT): "); };
filter f_audit    { message("^AUDIT"); };

# Log paths
log {
  source(s_src);
  filter(f_messages);
  destination(d_messages_sql);
};

log {
  source(s_src);
  filter(f_firewall);
  destination(d_firewall_sql);
};

log {
  source(s_src);
  filter(f_audit);
  destination(d_audit_sql);
};

# Include 
@include "sp-*.conf"
